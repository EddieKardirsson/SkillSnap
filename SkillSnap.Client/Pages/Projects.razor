@page "/projects"
@inject ProjectService ProjectService
@inject UserSessionService UserSession
@implements IDisposable

<PageTitle>Projects - SkillSnap</PageTitle>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3>Projects</h3>
        
        @if (UserSession.IsAuthenticated)
        {
            <button class="btn btn-primary" @onclick="ShowAddForm">
                <i class="bi bi-plus-circle"></i> Add Project
            </button>
        }
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (projects.Any())
    {
        <div class="row">
            @foreach (var project in projects)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(project.ImageUrl))
                        {
                            <img src="@project.ImageUrl" class="card-img-top" alt="@project.Title" style="height: 200px; object-fit: cover;">
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@project.Title</h5>
                            <p class="card-text flex-grow-1">@project.Description</p>
                            
                            @if (project.PortfolioUser != null)
                            {
                                <small class="text-muted">By: @project.PortfolioUser.Name</small>
                            }
                            
                            @if (UserSession.IsAdmin)
                            {
                                <div class="mt-2">
                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteProject(project.Id)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <h4>No Projects Found</h4>
            <p>There are currently no projects to display.</p>
            @if (UserSession.IsAuthenticated)
            {
                <button class="btn btn-primary" @onclick="ShowAddForm">Add the first project!</button>
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(message))
    {
        <div class="alert alert-info mt-3">@message</div>
    }
</div>

@code {
    private List<Project> projects = new();
    private bool isLoading = true;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        UserSession.OnStateChanged += StateHasChanged;
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        isLoading = true;
        try
        {
            projects = await ProjectService.GetProjectsAsync();
        }
        catch (Exception ex)
        {
            message = $"Error loading projects: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowAddForm()
    {
        message = "Add Project functionality will be implemented soon!";
    }

    private async Task DeleteProject(int projectId)
    {
        if (UserSession.IsAdmin)
        {
            message = $"Delete project {projectId} functionality will be implemented soon!";
        }
    }

    public void Dispose()
    {
        UserSession.OnStateChanged -= StateHasChanged;
    }
}